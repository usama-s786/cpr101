Dell Laptop@DESKTOP-KS97N5R MINGW64 /d/CPR101/Final Project/Project Source Code/VERSION 1/MYFILES (master)
$ git status -v
On branch master
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        converting.h
        converting_test_cases.xlsx.xlsx
        converting_testing.txt
        main.c

nothing added to commit but untracked files present (use "git add" to track)

Dell Laptop@DESKTOP-KS97N5R MINGW64 /d/CPR101/Final Project/Project Source Code/VERSION 1/MYFILES (master)
$ git log
commit 3d057db737d46abdca95c9e77c603377ee3231e5 (HEAD -> master)
Author: Sameer <sali295@myseneca.ca>
Date:   Tue Dec 7 21:04:21 2021 -0500

    V1

Dell Laptop@DESKTOP-KS97N5R MINGW64 /d/CPR101/Final Project/Project Source Code/VERSION 1/MYFILES (master)
$ git log -p "converting.c"
commit 3d057db737d46abdca95c9e77c603377ee3231e5 (HEAD -> master)
Author: Sameer <sali295@myseneca.ca>
Date:   Tue Dec 7 21:04:21 2021 -0500

    V1

diff --git a/converting.c b/converting.c
new file mode 100644
index 0000000..4016008
--- /dev/null
+++ b/converting.c
@@ -0,0 +1,20 @@
+#define _CRT_SECURE_N0_WARNINGS                // To overcome the scanf warnings
+#include "converting.h"                        //including the header file
+
+/* Version 1 */
+// CONVERTING V1
+
+void converting() {                                  //defining the function fo+// CONVERTING V1
+
+void converting() {                                  //defining the function fo
+
+void converting() {                                  //defining the function fo
r converting
+       printf("*** Start of Converting Strings to int Demo ***\n");
+       char int_string[80];                            // declaring a character array to store 79 characters and a null operator
+       int int_number;                                 // declaring an integer type element
+       printf("Type the int numeric string (q - to quit): \n");
+       gets(int_string);                             //gets input from user and store ir in 'int_string'
+       while (strcmp(int_string, "q") != 0) {       //A while loop which repeates execution until string 'q' is entered to quit
+               int_number = atoi(int_string);           // calling a function to convert string to integer
+               printf("Converted number is %d\n", int_number);    // printing the converted numbers
+               printf("Type the int numeric string (q - to quit): \n");  //prompts the user to enter string again
+               gets(int_string);                     // gets next string from user and store it in 'int_string'
+       }
+       printf("*** End of Converting Strings to int Demo ***\n\n");
+}

Dell Laptop@DESKTOP-KS97N5R MINGW64 /d/CPR101/Final Project/Project Source Code/VERSION 2/MY FILES (master)
$ git status -v
On branch master
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        converting.h
        converting_test_cases.xlsx
        converting_testing.txt

nothing added to commit but untracked files present (use "git add" to track)

Dell Laptop@DESKTOP-KS97N5R MINGW64 /d/CPR101/Final Project/Project Source Code/VERSION 2/MY FILES (master)
$ git log
commit 8dc0252f5bf7d60c60ca0fb1088eec98c6a6718c (HEAD -> master)
Author: Sameer <sali295@myseneca.ca>
Date:   Tue Dec 7 20:59:29 2021 -0500

    V2

Dell Laptop@DESKTOP-KS97N5R MINGW64 /d/CPR101/Final Project/Project Source Code/VERSION 2/MY FILES (master)
$ git log -p "converting.c"
commit 8dc0252f5bf7d60c60ca0fb1088eec98c6a6718c (HEAD -> master)
Author: Sameer <sali295@myseneca.ca>
Date:   Tue Dec 7 20:59:29 2021 -0500

    V2

diff --git a/converting.c b/converting.c
new file mode 100644
index 0000000..4ebc049
--- /dev/null
+++ b/converting.c
@@ -0,0 +1,37 @@
+#define _CRT_SECURE_N0_WARNINGS                // To overcome the scanf warnings
+#include "converting.h"                        //including the header file
+
+/* Version 1 */
+// CONVERTING V1
+
+void converting() {                                  //defining the function for converting
+       printf("*** Start of Converting Strings to int Demo ***\n");
+       char int_string[80];                            // declaring a character array to store 79 characters and a null operator
+       int int_number;                                 // declaring an integer type element
+       printf("Type the int numeric string (q - to quit): \n");
+       gets(int_string);                             //gets input from user and store ir in 'int_string'
+       while (strcmp(int_string, "q") != 0) {       //A while loop which repeates execution until string 'q' is entered to quit
+               int_number = atoi(int_string);           // calling a function to convert string to integer
+               printf("Converted number is %d\n", int_number);    // printing the converted numbers
+               printf("Type the int numeric string (q - to quit): \n");  //prompts the user to enter string again
+               gets(int_string);                     // gets next string from user and store it in 'int_string'
+       }
+       printf("*** End of Converting Strings to int Demo ***\n\n");          //declares the closing of int conversion module
+
+
+   /*VERSION 2*/
+
+
+  printf("*** Start of Converting Strings to double Demo ***\n");   // declares the start of converting to double module
+  char double_string[80];                          // declaring a character array to store 79 characters and a null operator
+  double double_number;                           // declaring a double type element
+  printf("Type the double numeric string (q - to quit): \n");
+  gets(double_string);                        //gets input from user and store ir in 'double_string'
+     while (strcmp(double_string, "q") != 0) {   //A while loop which repeates execution until string 'q' is entered to quit
+          double_number = atof(double_string);    // calling a function to convert string to double
+          printf("Converted number is %f\n", double_number);   // printing the converted numbers
+          printf("Type the double numeric string (q to quit) : \n");    //prompts the user to enter string again
+          gets(double_string);                         // gets next string from user and store it in 'double_string'
+     }
+
+   printf("*** End of Converting Strings to double Demo *** \n\n");
+}

